<?xml version="1.0" encoding="UTF-8"?>
<project name="VideoRecorder" default="all" basedir=".">

    <!-- Load Environment specific properties from properties file -->
    <property file="build.properties"/>
    <property environment="env"/>

    <fail unless="env.JAVA_HOME"
          message="JAVA_HOME needs to be defined as an environment variable or in the Ant build."/>
    <fail unless="env.RED5_HOME"
          message="RED5_HOME needs to be defined as an environment variable or in the Ant build."/>

    <property name="JAVA_HOME" value="${env.JAVA_HOME}"/>
    <property name="RED5_HOME" value="${env.RED5_HOME}"/>

    <!-- Log file for build -->
    <target name="logBuild">
        <tstamp>
            <format property="timestamp" pattern="dd-MM-yyyy_HH-mm-ss"/>
        </tstamp>
        <property name="build.log.dir" location="${basedir}/buildlogs"/>
        <mkdir dir="${build.log.dir}"/>
        <property name="build.log.filename" value="build_${timestamp}.log"/>
        <record name="${build.log.dir}/${build.log.filename}" loglevel="verbose" action="start" append="false"/>
        <echo message="Build logged to ${build.log.filename}"/>
    </target>


    <path id="project.classpath">
        <fileset dir="${RED5_HOME}/lib"/>
        <fileset file="${RED5_HOME}/red5.jar"/>
        <!-- project specific libs -->
        <fileset dir="${java.lib.dir}"/>
    </path>

    <!-- Init with echoing some info to the console -->
    <target name="init" description="Initializes the build">
        <condition property="java.target_version" value="1.6">
            <not>
                <isset property="java.target_version"/>
            </not>
        </condition>
        <tstamp prefix="build">
            <format property="TODAY" pattern="dd-MMMM-yyyy hh:mm:ss aa" locale="en"/>
        </tstamp>
        <echo message="================================================="/>
        <echo message="${project.name}-${project.version} [${build.TODAY}]"/>
        <echo message="Copyright (c) ${project.year} ${project.owner}"/>
        <echo message="OS : ${os.name}"/>
        <echo message="Author: ${author}"/>
        <echo message="For support: ${contact.email}"/>
        <echo message="================================================="/>
    </target>

    <!-- Prepare directories for build -->
    <target name="prepare" description="Setup the directories for building">
        <mkdir dir="${java.build.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <!-- Compile Main Application -->
    <target name="compile" depends="init,prepare,java-compile" description="Compiles related modules">
        <echo>Compiling java and flex files...</echo>
    </target>

    <target name="java-compile">
        <javac sourcepath="" srcdir="${java.src.dir}" destdir="${java.build.dir}" classpathref="project.classpath"
               optimize="${build.optimize}" verbose="${build.verbose}" fork="${build.fork}" nowarn="${build.nowarn}"
               deprecation="${build.deprecation}" debug="true" compiler="modern" includeantruntime="false"
               source="${java.target_version}" target="${java.target_version}" listfiles="false"/>
    </target>

    <!-- Clean output dirs -->
    <target name="clean" description="clean all generated files">
        <delete dir="${java.build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <!-- Run all, default -->
    <target name="dist" description="setup the destination directory">
        <copy todir="${dist.dir}">
            <fileset dir="${java.webapp.dir}"/>
        </copy>
        <copy todir="${dist.dir}/WEB-INF/classes">
            <fileset dir="${java.build.dir}"/>
        </copy>
        <copy file="${java.resource.dir}/logback-${application.name}.xml" todir="${dist.dir}/WEB-INF/classes"/>
    </target>

    <target name="war" depends="dist">
        <tstamp prefix="build">
            <format property="TODAY" pattern="dd-MMMM-yyyy hh:mm:ss aa" locale="en"/>
        </tstamp>
        <war destfile="${dist.dir}/${application.name}.war" webxml="${dist.dir}/WEB-INF/web.xml">
            <fileset dir="${dist.dir}">
            </fileset>
            <lib dir="${java.lib.dir}"/>
            <manifest>
                <attribute name="Built" value="${build.TODAY} by ${author}"/>
                <attribute name="Build-OS" value="${os.name} ${os.version}"/>
                <attribute name="Build-Java" value="Java ${java.version}"/>
            </manifest>
        </war>
    </target>

    <target name="deploy" depends="dist" description="deploy the files into red5 server">
        <copy todir="${RED5_HOME}/webapps/${application.name}/">
            <fileset dir="${dist.dir}"/>
        </copy>

        <copy todir="/var/www/html/${application.name}">
            <fileset dir="${dist.dir}/html/"/>
        </copy>
    </target>

    <target name="all"
            depends="usage,clean,compile,war"
            description="Complete build in efficient sequence">
        <tstamp prefix="build">
            <format property="TODAY" pattern="dd-MMMM-yyyy hh:mm:ss aa" locale="en"/>
        </tstamp>
        <echo>Server builded on ${build.TODAY}...</echo>
    </target>

    <target name="usage">
        <echo>Type 'ant -p' for available targets</echo>
    </target>
</project>